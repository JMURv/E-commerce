version: '3.3'
services:
  postgres:
    container_name: postgres
    image: postgres:15.0-alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data

  users_postgres:
    container_name: users_postgres
    image: postgres:15.0-alpine
    restart: always
    ports:
      - "5433:5433"
    env_file:
      - .users/.env
    volumes:
      - users_pg_data:/var/lib/postgresql/data

#  nats:
#    container_name: nats
#    image: nats:latest
#    restart: always
#    ports:
#      - "4222:4222"
#      - "6222:6222"
#      - "8222:8222"
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    env_file:
#      - ./.env
#    ports:
#      - "15432:80"
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    depends_on:
#      - postgres

  gateway:
    container_name: gateway
    image: "ecom_gateway:latest"
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - postgres
    command: sh -c "cd ./gateway/cmd && go run ."

  users:
    container_name: users
    image: "ecom_users:latest"
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - "50075:50075"
    expose:
      - "50075"
    depends_on:
      - postgres
    command: sh -c "cd ./users/cmd && go run ."

  items:
    container_name: items
    image: "ecom_items:latest"
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - "50080:50080"
    expose:
      - "50080"
    depends_on:
      - postgres
    command: sh -c "cd ./items/cmd && go run ."

  review:
    container_name: review
    image: "ecom_backend:latest"
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - "50070:50070"
    expose:
      - "50070"
    depends_on:
      - postgres
    command: sh -c "cd ./reviews/cmd && go run ."

volumes:
  pg_data:
  users_pg_data:
#  pgadmin: