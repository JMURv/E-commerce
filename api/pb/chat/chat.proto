syntax = "proto3";

package chat;
option go_package = "github.com/JMURv/e-commerce/api/pb/chat";

import "common/common.proto";

message EmptyResponse {}

service Broadcast {
  rpc CreateStream(Connect) returns (stream Message);
  rpc CreateMessage(CreateMessageRequest) returns (EmptyResponse);
  rpc UpdateMessage(UpdateMessageRequest) returns (EmptyResponse);
  rpc DeleteMessage(DeleteMessageRequest) returns (EmptyResponse);
}

message Connect {
  common.User user = 1;
  bool active = 2;
}

service Rooms {
  rpc CreateRoom(CreateRoomRequest) returns (Room);
  rpc GetUserRooms(ListRoomRequest) returns (ListRoomResponse);
  rpc DeleteRoom(DeleteRoomRequest) returns (EmptyResponse);
}

message Room {
  uint64 id = 1;
  uint64 seller_id = 2;
  uint64 buyer_id = 3;
  uint64 item_id = 4;
  repeated Message messages = 5;
  uint64 created_at = 6;
}

message CreateRoomRequest {
  uint64 seller_id = 1;
  uint64 buyer_id = 2;
  uint64 item_id = 3;
}

message ListRoomRequest {
  uint64 user_id = 1;
}

message DeleteRoomRequest {
  uint64 room_id = 1;
}

message ListRoomResponse {
  repeated Room rooms = 1;
}

service Messages {
  rpc GetMessageByID(GetMessageByIDRequest) returns (Message);
}

message Media {
  uint64 id = 1;
  string url = 2;
}

message Message {
  uint64 id = 1;
  uint64 user_id = 2;
  uint64 room_id = 3;
  uint64 reply_to_id = 4;
  string text = 5;
  bool seen = 6;
  bool edited = 7;
  uint64 created_at = 8;
  repeated Media media = 9;
}

message GetMessageByIDRequest {
  uint64 message_id = 1;
}

message CreateMessageRequest {
  uint64 user_id = 1;
  uint64 room_id = 2;
  uint64 reply_to_id = 3;
  string text = 4;
  repeated bytes media = 5;
}

message UpdateMessageRequest {
  uint64 id = 1;
  uint64 user_id = 2;
  uint64 room_id = 3;
  uint64 reply_to_id = 4;
  string text = 5;
  repeated bytes media = 6;
}

message DeleteMessageRequest {
  uint64 user_id = 1;
  uint64 message_id = 2;
  uint64 room_id = 3;
}

